[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:get_id()'''
position = "after"
payload = '''
if next(SMODS.find_card("j_jam_double_vision")) then
    return 2
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:is_face(from_boss)'''
position = "after"
payload = '''
if next(SMODS.find_card("j_jam_prosopagnosia")) then
    return false
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if hand_chips*mult > 0 then'''
position = "before"
payload = '''
G.GAME.round_resets.jam_last_chips = math.floor(hand_chips*mult)
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if G.GAME.blind.name == 'The Serpent' and'''
position = "before"
payload = '''
local jam_pot_extra = 0
for _, j in ipairs(SMODS.find_card("j_jam_greedy_pot")) do
    jam_pot_extra = jam_pot_extra + j.ability.extra
end
if jam_pot_extra and G.GAME.current_round.hands_played > 0 or G.GAME.current_round.discards_used > 0 then
    hand_space = math.min(#G.deck.cards, hand_space + jam_pot_extra)
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''G.STATE = G.STATES.NEW_ROUND'''
position = "after"
payload = '''
local scouters = SMODS.find_card("j_jam_scouter")
if G.GAME.current_round.hands_left < 1 and next(scouters) then
    G.STATE = G.STATES.DRAW_TO_HAND
    scouters[1]:sell_card()
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > 5 then'''
position = "at"
payload = '''
if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > G.hand.config.highlighted_limit then
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if flush_calc then'''
position = "before"
payload = '''
if next(SMODS.find_card("j_jam_safari")) and (not self.debuff or bypass_debuff) then
    return true
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''self.sell_cost_label = self.facing == 'back' and '?' or self.sell_cost'''
position = "after"
payload = '''
if self.ability and self.ability.jam_greener_pastures then
    self.cost = 0
    self.sell_cost = 0
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if specific_vars and specific_vars.pinned then info_queue[#info_queue+1] = {key = 'pinned_left', set = 'Other'} end'''
position = "before"
payload = '''
if card and card.ability and card.ability.jam_greener_pastures then
    info_queue[#info_queue + 1] = {
        key = 'jam_greener_pastures_note', 
        set = 'Other'
    }
end'''
match_indent = true
